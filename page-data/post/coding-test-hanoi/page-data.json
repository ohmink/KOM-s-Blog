{
    "componentChunkName": "component---src-pages-post-mdx-slug-js",
    "path": "/post/coding-test-hanoi/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"description\": \"프로그래머스 코딩테스트 연습문제 하노이의 탑\",\n  \"title\": \"[프로그래머스] 하노이의 탑\",\n  \"tag\": [\"코딩테스트\"],\n  \"date\": \"2021-12-29\",\n  \"summary\": \"하노이 탑(Tower of Hanoi)은 퍼즐의 일종입니다. 세 개의 기둥과 이 기동에 꽂을 수 있는 크기가 다양한 원판들이 있고, 퍼즐을 시작하기 전에는 한 기둥에 원판들이 작은 것이 위에 있도록 순서대로 쌓여 있습니다. 게임의 목적은 다음 두 가지 조건을 만족시키면서, 한 기둥에 꽂힌 원판들을 그 순서 그대로 다른 기둥으로 옮겨서 다시 쌓는 것입니다.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uCF54\\uB529\\uD14C\\uC2A4\\uD2B8 \\uC5F0\\uC2B5 > \\uC5F0\\uC2B5\\uBB38\\uC81C > \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://programmers.co.kr/learn/courses/30/lessons/12946\"\n  }, \"\\uD558\\uB178\\uC774\\uC758 \\uD0D1\"))), mdx(\"h2\", null, \"\\uD480\\uC774\"), mdx(\"p\", null, \"\\uD558\\uB178\\uC774\\uC758 \\uD0D1 \\uADDC\\uCE59\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD55C \\uBC88\\uC5D0 \\uD558\\uB098\\uC758 \\uC6D0\\uD310\\uB9CC \\uC62E\\uAE38 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD070 \\uC6D0\\uD310\\uC774 \\uC791\\uC740 \\uC6D0\\uD310 \\uC704\\uC5D0 \\uC62C \\uC218 \\uC5C6\\uB2E4.\")), mdx(\"p\", null, \"\\uC6D0\\uB9AC\\uB294 \\uC804\\uCCB4 \\uC6D0\\uD310\\uC744 \\uB2E4\\uB978 \\uACF3\\uC73C\\uB85C \\uC62E\\uAE30\\uB824\\uBA74, \\uAC00\\uC7A5 \\uBC11\\uC5D0 \\uC788\\uB294 \\uC6D0\\uD310\\uC744 \\uADF8\\uACF3\\uC73C\\uB85C \\uBA3C\\uC800 \\uC62E\\uACA8\\uC57C \\uD55C\\uB2E4\\uB294 \\uAC83.\\n\\uB530\\uB77C\\uC11C \\uAC00\\uC7A5 \\uBC11\\uC5D0 \\uC788\\uB294 \\uC6D0\\uD310\\uC744 \\uC81C\\uC678\\uD55C \\uD0D1\\uC744 \\uBAA9\\uC801\\uC9C0\\uAC00 \\uC544\\uB2CC \\uACF3\\uC73C\\uB85C \\uC62E\\uAE34\\uB2E4\\uB294 \\uC0DD\\uAC01.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6D0\\uD310 n\\uAC1C\\uB97C c\\uB85C \\uC62E\\uACA8\\uC57C \\uD55C\\uB2E4\\uBA74\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"n - 1\\uAC1C\\uC758 \\uD0D1\\uC744 b\\uB85C \\uC62E\\uAE30\\uACE0 \\uAC00\\uC7A5 \\uBC11\\uC5D0 \\uC788\\uB294 \\uC6D0\\uD310\\uC744 c\\uB85C \\uC62E\\uAE34\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b\\uC5D0 \\uC788\\uB294 \\uD0D1\\uC744 c\\uB85C \\uC62E\\uAE34\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"function solution(number) {\\n    const answer = [];\\n\\n    function hanoi(n, from, to, by) {\\n        if (n === 1)\\n            answer.push([from, to])\\n        else {\\n            hanoi(n - 1, from, by, to); // n - 1\\uAC1C\\uC758 \\uD0D1\\uC744 by\\uB85C \\uC62E\\uAE30\\uACE0\\n            answer.push([from, to]) // n\\uBC88\\uC9F8 \\uCE78\\uC744 to\\uB85C \\uC62E\\uACA8\\uC11C \\uB9E8 \\uBC11\\uC5D0 \\uAE54\\uACE0\\n            hanoi(n - 1, by, to, from); // by\\uC5D0 \\uC788\\uB294 \\uD0D1\\uC744 to\\uB85C \\uC62E\\uAE34\\uB2E4\\n        }\\n    }\\n\\n    hanoi(number, 1, 3, 2); // n\\uAC1C\\uC758 \\uD0D1\\uC744 1\\uC5D0\\uC11C 3\\uC73C\\uB85C \\uC62E\\uAE34\\uB2E4.\\n    return answer;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"description":"프로그래머스 코딩테스트 연습문제 하노이의 탑","title":"[프로그래머스] 하노이의 탑","date":"2021년 12월 29일","tag":["코딩테스트"]},"internal":{"content":"---\r\ndescription: \"프로그래머스 코딩테스트 연습문제 하노이의 탑\"\r\ntitle: \"[프로그래머스] 하노이의 탑\"\r\ntag: [\"코딩테스트\"]\r\ndate: \"2021-12-29\"\r\nsummary: \"하노이 탑(Tower of Hanoi)은 퍼즐의 일종입니다. 세 개의 기둥과 이 기동에 꽂을 수 있는 크기가 다양한 원판들이 있고, 퍼즐을 시작하기 전에는 한 기둥에 원판들이 작은 것이 위에 있도록 순서대로 쌓여 있습니다. 게임의 목적은 다음 두 가지 조건을 만족시키면서, 한 기둥에 꽂힌 원판들을 그 순서 그대로 다른 기둥으로 옮겨서 다시 쌓는 것입니다.\"\r\n---\r\n\r\n> 코딩테스트 연습 > 연습문제 > [하노이의 탑](https://programmers.co.kr/learn/courses/30/lessons/12946)\r\n\r\n## 풀이\r\n\r\n하노이의 탑 규칙\r\n\r\n1. 한 번에 하나의 원판만 옮길 수 있다.\r\n2. 큰 원판이 작은 원판 위에 올 수 없다.\r\n\r\n원리는 전체 원판을 다른 곳으로 옮기려면, 가장 밑에 있는 원판을 그곳으로 먼저 옮겨야 한다는 것.\r\n따라서 가장 밑에 있는 원판을 제외한 탑을 목적지가 아닌 곳으로 옮긴다는 생각.\r\n\r\n- 원판 n개를 c로 옮겨야 한다면\r\n- n - 1개의 탑을 b로 옮기고 가장 밑에 있는 원판을 c로 옮긴다.\r\n- b에 있는 탑을 c로 옮긴다.\r\n\r\n```\r\nfunction solution(number) {\r\n    const answer = [];\r\n\r\n    function hanoi(n, from, to, by) {\r\n        if (n === 1)\r\n            answer.push([from, to])\r\n        else {\r\n            hanoi(n - 1, from, by, to); // n - 1개의 탑을 by로 옮기고\r\n            answer.push([from, to]) // n번째 칸을 to로 옮겨서 맨 밑에 깔고\r\n            hanoi(n - 1, by, to, from); // by에 있는 탑을 to로 옮긴다\r\n        }\r\n    }\r\n\r\n    hanoi(number, 1, 3, 2); // n개의 탑을 1에서 3으로 옮긴다.\r\n    return answer;\r\n}\r\n```\r\n"}}},"pageContext":{"id":"39a2bc35-214e-5479-813d-0e9982d6d676","slug":"coding-test-hanoi","__params":{"slug":"coding-test-hanoi"}}},
    "staticQueryHashes": ["2841612589","3433077949","3494247862"]}