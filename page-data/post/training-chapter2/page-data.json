{
    "componentChunkName": "component---src-pages-post-mdx-slug-js",
    "path": "/post/training-chapter2/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"description\": \"알고리즘 트레이닝 북 - 스티븐 스키에나, 미구엘 레비야 Chapter 2. 자료구조, 문제 9번과 문제 12번 풀이\",\n  \"title\": \"[트레이닝] Chapter 2. 자료구조 - 문제 9, 문제 12\",\n  \"tag\": [\"코딩테스트\"],\n  \"date\": \"2021-12-27\",\n  \"summary\": \"알고리즘 트레이닝 북 (저자 : 스티븐 스키에나, 미구엘 레비야 / 역자 : 서환수)의 Chapter 2. 자료구조-의 문제 2개를 풀어보았다.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Chapter 2. \\uC790\\uB8CC\\uAD6C\\uC870\\uB294 \\uBC30\\uC5F4, \\uC2A4\\uD0DD, \\uD050, \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC640 \\uAC19\\uC740 \\uAC83\\uC744 \\uB2E4\\uB8EC\\uB2E4. \\uADF8\\uB798\\uD504\\uB098 \\uC5F0\\uACB0\\uB9AC\\uC2A4\\uD2B8\\uB294 \\uB098\\uC911\\uC5D0 \\uB2E4\\uB8E8\\uB294 \\uB4EF.\")), mdx(\"h2\", null, \"\\uBB38\\uC81C 9. \\uC720\\uCF8C\\uD55C \\uC810\\uD37C (\\uB808\\uBCA8 1)\"), mdx(\"h3\", null, \"\\uC124\\uBA85\"), mdx(\"p\", null, \"n\\uAC1C\\uC758 \\uC815\\uC218\\uB85C \\uC774\\uB8E8\\uC5B4\\uC9C4 \\uC218\\uC5F4\\uC5D0 \\uB300\\uD574 \\uC11C\\uB85C \\uC778\\uC811\\uD55C \\uB450 \\uC218\\uC758 \\uCC28\\uAC00 1~n-1\\uAE4C\\uC9C0\\uC758 \\uAC12\\uC744 \\uBAA8\\uB450 \\uAC00\\uC9C0\\uBA74 \\uADF8 \\uC218\\uC5F4\\uC744 \\uC720\\uCF8C\\uD55C \\uC810\\uD37C\\uB77C\\uACE0 \\uBD80\\uB978\\uB2E4. \\uC218\\uC5F4\\uC774 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C \\uC720\\uCF8C\\uD55C \\uC810\\uD37C\\uC778\\uC9C0 \\uD310\\uB2E8\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uB77C.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC720\\uCF8C\\uD55C \\uC810\\uD37C\\uB77C\\uBA74 Jolly\\uB97C \\uB9AC\\uD134\\uD558\\uACE0 \\uC544\\uB2C8\\uB77C\\uBA74 Not Jolly\\uB97C \\uB9AC\\uD134\\uD55C\\uB2E4.\")), mdx(\"h3\", null, \"\\uC608\\uC2DC\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Input\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Output\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4 1 4 2 3\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Jolly\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"5 1 4 2 -1 6\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Not Jolly\")))), mdx(\"h3\", null, \"\\uD480\\uC774\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC218\\uC5F4\\uC774 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, n\\uBC88\\uC9F8~n+1\\uBC88\\uC9F8 \\uC22B\\uC790\\uAC00 \\uC870\\uAC74\\uC744 \\uB9CC\\uC871\\uD558\\uB294\\uC9C0 \\uD655\\uC778\\uD558\\uC790.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"function solution(seq) {\\n    const n = seq.length;\\n\\n    for (let i = 0; i < seq.length - 1; i++) {\\n        const diff = Math.abs(seq[i] - seq[i + 1]);\\n\\n        if (diff < 1 || diff > n - 1)\\n            return \\\"Not jolly\\\";\\n    }\\n\\n    return \\\"Jolly\\\";\\n}\\n\\nconsole.log(solution([4, 1, 4, 2, 3])); // \\\"Jolly\\\"\\nconsole.log(solution([5, 1, 4, 2, -1, 6])); \\\"Not Jolly\\\"\\n\")), mdx(\"h2\", null, \"\\uBB38\\uC81C 12. \\uC554\\uD638 \\uAE68\\uAE30\"), mdx(\"p\", null, \"\\uC554\\uD638\\uD654 \\uBC29\\uBC95 \\uC911 \\uD754\\uD788 \\uC4F0\\uC774\\uB294 \\uBC29\\uBC95\\uC73C\\uB85C \\uC54C\\uD30C\\uBCB3 \\uAE00\\uC790\\uB97C \\uB2E4\\uB978 \\uAE00\\uC790\\uB85C \\uCE58\\uD658\\uD558\\uB294 \\uBC29\\uBC95\\uC774 \\uC788\\uB2E4. \\uC774\\uAC83\\uC744 \\uB2E4\\uC2DC \\uBCF5\\uAD6C\\uD558\\uB824\\uBA74 \\uB450 \\uAC1C\\uC758 \\uC11C\\uB85C \\uB2E4\\uB978 \\uAE00\\uC790\\uAC00 \\uAC19\\uC740 \\uAE00\\uC790\\uB85C \\uCE58\\uD658\\uB418\\uC9C0 \\uC54A\\uC544\\uC57C \\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uC554\\uD638\\uD654\\uB41C \\uD14D\\uC2A4\\uD2B8\\uAC00 \\uD55C \\uC904 \\uC774\\uC0C1 \\uC785\\uB825\\uB418\\uB294\\uB370, \\uAC01 \\uC904\\uB9C8\\uB2E4 \\uB2E4\\uB978 \\uCE58\\uD658 \\uBC29\\uBC95\\uC774 \\uC801\\uC6A9\\uB41C\\uB2E4\\uACE0 \\uAC00\\uC815\\uD558\\uC790. \\uC554\\uD638\\uD654 \\uC774\\uC804\\uC758 \\uD14D\\uC2A4\\uD2B8\\uC5D0 \\uC788\\uB294 \\uB2E8\\uC5B4\\uB294 \\uBAA8\\uB450 \\uC8FC\\uC5B4\\uC9C4 \\uC0AC\\uC804\\uC5D0 \\uB4E4\\uC5B4\\uC788\\uB294 \\uB2E8\\uC5B4\\uB77C\\uACE0 \\uAC00\\uC815\\uD558\\uACE0, \\uC554\\uD638\\uD654\\uB41C \\uD14D\\uC2A4\\uD2B8\\uB97C \\uD574\\uB3C5\\uD558\\uC5EC \\uC6D0\\uB798 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uC54C\\uC544\\uB0B4\\uC790.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC785\\uB825\\uC73C\\uB85C \\uC0AC\\uC804\\uC758 \\uB2E8\\uC5B4 \\uAC1C\\uC218, \\uB2E8\\uC5B4\\uB4E4, \\uC554\\uD638\\uD654\\uAC00 \\uB41C \\uBB38\\uC7A5\\uB4E4\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC774\\uAC83\\uC744 \\uD574\\uB3C5\\uD558\\uC5EC \\uC6D0\\uB798 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uB9AC\\uD134\\uD558\\uACE0, \\uAC00\\uB2A5\\uD55C \\uD14D\\uC2A4\\uD2B8\\uAC00 \\uC5EC\\uB7EC \\uAC1C\\uB77C\\uBA74 \\uC544\\uBB34\\uAC70\\uB098 \\uB9AC\\uD134\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD574\\uB3C5\\uC774 \\uBD88\\uAC00\\uB2A5\\uD558\\uB2E4\\uBA74 \\uBAA8\\uB4E0 \\uBB38\\uC790\\uB97C \\uC544\\uC2A4\\uD14C\\uB9AC\\uC2A4\\uD06C(\", \"*\", \")\\uB85C \\uBC14\\uAFB8\\uC5B4 \\uB9AC\\uD134\\uD55C\\uB2E4.\")), mdx(\"h3\", null, \"\\uC608\\uC2DC\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC785\\uB825\\uACFC \\uCD9C\\uB825 \\uC608\\uAC00 \\uC870\\uAE08 \\uBD88\\uCE5C\\uC808\\uD558\\uB2E4. \\uC0AC\\uC804\\uC758 \\uB2E8\\uC5B4 \\uAC1C\\uC218\\uAC00 \\uCCAB \\uC904\\uC5D0 \\uC8FC\\uC5B4\\uC9C0\\uACE0 \\uADF8 \\uB2E4\\uC74C\\uBD80\\uD130 \\uADF8 \\uAC1C\\uC218\\uB9CC\\uD07C\\uC758 \\uB2E8\\uC5B4\\uAC00 \\uC8FC\\uC5B4\\uC9C0\\uACE0, \\uADF8 \\uB2E4\\uC74C \\uC904\\uBD80\\uD130 \\uD574\\uB3C5\\uD574\\uC57C \\uD558\\uB294 \\uD14D\\uC2A4\\uD2B8\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uD480\\uC774\\uC5D0\\uC11C\\uB294 \\uC774\\uAC78 \\uB0B4 \\uC2DD\\uB300\\uB85C \\uBC14\\uAFB8\\uC5B4 \\uC785\\uB825\\uD588\\uB2E4.\\nInput\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"6\\nand\\ndick\\njane\\npuff\\nspot\\nyertle\\nbjvg xsb hxsn qymm xsb rqat xsb pnetfn\\nxxxx yyy zzzz www yyyy aaa bbbb ccc dddddd\\n\")), mdx(\"p\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dick and jane puff and spot and yertle\\n**** *** **** *** **** *** **** *** ******\\n\")), mdx(\"h3\", null, \"\\uD480\\uC774\"), mdx(\"p\", null, \"\\uB2E4\\uC74C \\uCF54\\uB4DC\\uC5D0\\uC11C\\uB294 \\uC0AC\\uC804\\uC744 \\uBC30\\uC5F4\\uB85C \\uBC1B\\uC558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uB530\\uB85C \\uBC30\\uC5F4\\uC744 \\uC120\\uC5B8\\uD558\\uAC70\\uB098 \\uB2E8\\uC5B4\\uB97C \\uC0AC\\uC804\\uC5D0 \\uB123\\uC744 \\uD544\\uC694\\uAC00 \\uC5C6\\uB2E4. \\uD574\\uB3C5\\uD574\\uC57C \\uD560 \\uD14D\\uC2A4\\uD2B8 \\uC5ED\\uC2DC \\uBC30\\uC5F4\\uB85C \\uBC1B\\uC558\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC804\\uC758 \\uB2E8\\uC5B4\\uB97C \\uAE38\\uC774 \\uC21C\\uC73C\\uB85C \\uC815\\uB82C\\uD558\\uACE0, \\uD14D\\uC2A4\\uD2B8 \\uBC30\\uC5F4\\uC744 \\uC21C\\uD68C\\uD558\\uBA70 \\uAC01 \\uD14D\\uC2A4\\uD2B8\\uB97C split\\uD558\\uACE0 \\uC0AC\\uC804\\uACFC \\uBE44\\uAD50\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"isMath \\uD568\\uC218\\uC5D0\\uC11C \\uD14D\\uC2A4\\uD2B8\\uC758 \\uB2E8\\uC5B4\\uC640 \\uC0AC\\uC804\\uC758 \\uB2E8\\uC5B4\\uB97C \\uBE44\\uAD50\\uD558\\uB294\\uB370, \\uB450 \\uAC1C\\uC758 \\uBC30\\uC5F4(map1, map2)\\uC744 \\uAC00\\uC9C0\\uACE0 \\uD574\\uB3C5\\uC774 \\uAC00\\uB2A5\\uD55C\\uC9C0 \\uD310\\uB2E8\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC01 \\uB2E8\\uC5B4\\uB97C 0\\uBC88 ~ \\uB2E8\\uC5B4.length\\uAE4C\\uC9C0 \\uC21C\\uD68C\\uD558\\uBA70, map\\uC758 key\\uAC12 \\uD55C\\uCABD\\uC5D0\\uB9CC \\uC874\\uC7AC\\uD55C\\uB2E4\\uBA74 \\uB2E8\\uC5B4\\uB97C \\uC774\\uB8E8\\uB294 \\uC54C\\uD30C\\uBCB3\\uC758 \\uAC1C\\uC218\\uAC00 \\uB2E4\\uB974\\uB2E4\\uB294 \\uB73B\\uC774\\uBBC0\\uB85C false\\uB97C \\uB9AC\\uD134\\uD55C\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"function solution(dir, strs) {\\n    const answer = [];\\n    dir.sort((a, b) => a.length - b.length);\\n\\n    function isMatch(word1, word2) {\\n        const map1 = [];\\n        const map2 = [];\\n\\n        for (let i = 0; i < word1.length; i++) {\\n            if ((!map1[word1[i]] && map2[word2[i]]) || (map1[word1[i]] && !map2[word2[i]])) {\\n                return false;\\n            }\\n\\n            if (!map1[word1[i]]) {\\n                map1[word1[i]] = true;\\n                map2[word2[i]] = true;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    const history = [];\\n\\n    for (const str of strs) {\\n        const sArr = str.split(\\\" \\\");\\n        let result = \\\"\\\";\\n        let status = true;\\n\\n        for (let i = 0; i < sArr.length; i++) {\\n            status = true;\\n\\n            for (let j = 0; j < dir.length; j++) {\\n                if (sArr[i].length !== dir[j].length)\\n                    continue;\\n                else if (history[dir[j]] && history[dir[j]] !== sArr[i])\\n                    continue;\\n\\n                if (isMatch(sArr[i], dir[j])) {\\n                    history[dir[j]] = sArr[i];\\n                    result += `${dir[j]} `;\\n                    status = false;\\n\\n                    break;\\n                }\\n            }\\n\\n            if (status) {\\n                answer.push(str.replace(/\\\\w/g, \\\"*\\\"));\\n                break;\\n            }\\n        }\\n\\n        if (!status)\\n            answer.push(result);\\n    }\\n\\n    return answer;\\n}\\n\\nconsole.log(solution([\\\"and\\\", \\\"dick\\\", \\\"jane\\\", \\\"puff\\\", \\\"spot\\\", \\\"yertle\\\"], [\\\"bjvg xsb hxsn qymm xsb rqat xsb pnetfn\\\", \\\"xxxx yyy zzzz www yyyy aaa bbbb ccc dddddd\\\"]));\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"description":"알고리즘 트레이닝 북 - 스티븐 스키에나, 미구엘 레비야 Chapter 2. 자료구조, 문제 9번과 문제 12번 풀이","title":"[트레이닝] Chapter 2. 자료구조 - 문제 9, 문제 12","date":"2021년 12월 27일","tag":["코딩테스트"]},"internal":{"content":"---\r\ndescription: \"알고리즘 트레이닝 북 - 스티븐 스키에나, 미구엘 레비야 Chapter 2. 자료구조, 문제 9번과 문제 12번 풀이\"\r\ntitle: \"[트레이닝] Chapter 2. 자료구조 - 문제 9, 문제 12\"\r\ntag: [\"코딩테스트\"]\r\ndate: \"2021-12-27\"\r\nsummary: \"알고리즘 트레이닝 북 (저자 : 스티븐 스키에나, 미구엘 레비야 / 역자 : 서환수)의 Chapter 2. 자료구조-의 문제 2개를 풀어보았다.\"\r\n---\r\n\r\n> Chapter 2. 자료구조는 배열, 스택, 큐, 우선순위 큐와 같은 것을 다룬다. 그래프나 연결리스트는 나중에 다루는 듯.\r\n\r\n## 문제 9. 유쾌한 점퍼 (레벨 1)\r\n\r\n### 설명\r\n\r\nn개의 정수로 이루어진 수열에 대해 서로 인접한 두 수의 차가 1~n-1까지의 값을 모두 가지면 그 수열을 유쾌한 점퍼라고 부른다. 수열이 주어졌을 때 유쾌한 점퍼인지 판단하는 프로그램을 작성하라.\r\n\r\n- 유쾌한 점퍼라면 Jolly를 리턴하고 아니라면 Not Jolly를 리턴한다.\r\n\r\n### 예시\r\n\r\n| Input        | Output    |\r\n| ------------ | --------- |\r\n| 4 1 4 2 3    | Jolly     |\r\n| 5 1 4 2 -1 6 | Not Jolly |\r\n\r\n### 풀이\r\n\r\n- 수열이 주어졌을 때, n번째~n+1번째 숫자가 조건을 만족하는지 확인하자.\r\n\r\n```\r\nfunction solution(seq) {\r\n    const n = seq.length;\r\n\r\n    for (let i = 0; i < seq.length - 1; i++) {\r\n        const diff = Math.abs(seq[i] - seq[i + 1]);\r\n\r\n        if (diff < 1 || diff > n - 1)\r\n            return \"Not jolly\";\r\n    }\r\n\r\n    return \"Jolly\";\r\n}\r\n\r\nconsole.log(solution([4, 1, 4, 2, 3])); // \"Jolly\"\r\nconsole.log(solution([5, 1, 4, 2, -1, 6])); \"Not Jolly\"\r\n```\r\n\r\n## 문제 12. 암호 깨기\r\n\r\n암호화 방법 중 흔히 쓰이는 방법으로 알파벳 글자를 다른 글자로 치환하는 방법이 있다. 이것을 다시 복구하려면 두 개의 서로 다른 글자가 같은 글자로 치환되지 않아야 한다.\r\n\r\n암호화된 텍스트가 한 줄 이상 입력되는데, 각 줄마다 다른 치환 방법이 적용된다고 가정하자. 암호화 이전의 텍스트에 있는 단어는 모두 주어진 사전에 들어있는 단어라고 가정하고, 암호화된 텍스트를 해독하여 원래 텍스트를 알아내자.\r\n\r\n- 입력으로 사전의 단어 개수, 단어들, 암호화가 된 문장들이 주어진다.\r\n- 이것을 해독하여 원래 텍스트를 리턴하고, 가능한 텍스트가 여러 개라면 아무거나 리턴한다.\r\n- 해독이 불가능하다면 모든 문자를 아스테리스크(\\*)로 바꾸어 리턴한다.\r\n\r\n### 예시\r\n\r\n> 입력과 출력 예가 조금 불친절하다. 사전의 단어 개수가 첫 줄에 주어지고 그 다음부터 그 개수만큼의 단어가 주어지고, 그 다음 줄부터 해독해야 하는 텍스트가 주어진다. 풀이에서는 이걸 내 식대로 바꾸어 입력했다.\r\n> Input\r\n\r\n```\r\n6\r\nand\r\ndick\r\njane\r\npuff\r\nspot\r\nyertle\r\nbjvg xsb hxsn qymm xsb rqat xsb pnetfn\r\nxxxx yyy zzzz www yyyy aaa bbbb ccc dddddd\r\n```\r\n\r\nOutput\r\n\r\n```\r\ndick and jane puff and spot and yertle\r\n**** *** **** *** **** *** **** *** ******\r\n```\r\n\r\n### 풀이\r\n\r\n다음 코드에서는 사전을 배열로 받았기 때문에 따로 배열을 선언하거나 단어를 사전에 넣을 필요가 없다. 해독해야 할 텍스트 역시 배열로 받았다.\r\n\r\n- 사전의 단어를 길이 순으로 정렬하고, 텍스트 배열을 순회하며 각 텍스트를 split하고 사전과 비교한다.\r\n- isMath 함수에서 텍스트의 단어와 사전의 단어를 비교하는데, 두 개의 배열(map1, map2)을 가지고 해독이 가능한지 판단한다.\r\n- 각 단어를 0번 ~ 단어.length까지 순회하며, map의 key값 한쪽에만 존재한다면 단어를 이루는 알파벳의 개수가 다르다는 뜻이므로 false를 리턴한다.\r\n\r\n```\r\nfunction solution(dir, strs) {\r\n    const answer = [];\r\n    dir.sort((a, b) => a.length - b.length);\r\n\r\n    function isMatch(word1, word2) {\r\n        const map1 = [];\r\n        const map2 = [];\r\n\r\n        for (let i = 0; i < word1.length; i++) {\r\n            if ((!map1[word1[i]] && map2[word2[i]]) || (map1[word1[i]] && !map2[word2[i]])) {\r\n                return false;\r\n            }\r\n\r\n            if (!map1[word1[i]]) {\r\n                map1[word1[i]] = true;\r\n                map2[word2[i]] = true;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const history = [];\r\n\r\n    for (const str of strs) {\r\n        const sArr = str.split(\" \");\r\n        let result = \"\";\r\n        let status = true;\r\n\r\n        for (let i = 0; i < sArr.length; i++) {\r\n            status = true;\r\n\r\n            for (let j = 0; j < dir.length; j++) {\r\n                if (sArr[i].length !== dir[j].length)\r\n                    continue;\r\n                else if (history[dir[j]] && history[dir[j]] !== sArr[i])\r\n                    continue;\r\n\r\n                if (isMatch(sArr[i], dir[j])) {\r\n                    history[dir[j]] = sArr[i];\r\n                    result += `${dir[j]} `;\r\n                    status = false;\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (status) {\r\n                answer.push(str.replace(/\\w/g, \"*\"));\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!status)\r\n            answer.push(result);\r\n    }\r\n\r\n    return answer;\r\n}\r\n\r\nconsole.log(solution([\"and\", \"dick\", \"jane\", \"puff\", \"spot\", \"yertle\"], [\"bjvg xsb hxsn qymm xsb rqat xsb pnetfn\", \"xxxx yyy zzzz www yyyy aaa bbbb ccc dddddd\"]));\r\n```\r\n"}}},"pageContext":{"id":"e455c1e1-a04a-51b4-952a-6b07359069fc","slug":"training-chapter2","__params":{"slug":"training-chapter2"}}},
    "staticQueryHashes": ["2841612589","3433077949","3494247862"]}