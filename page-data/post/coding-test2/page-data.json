{
    "componentChunkName": "component---src-pages-post-mdx-slug-js",
    "path": "/post/coding-test2/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"description\": \"위클리 챌린지, [프로그래머스] 부족한 금액 계산하기\",\n  \"title\": \"[프로그래머스] 부족한 금액 계산하기\",\n  \"tag\": [\"코딩테스트\"],\n  \"date\": \"2021-08-17\",\n  \"summary\": \"놀이기구를 count번 타게 되면 현재 자신이 가지고 있는 금액에서 얼마가 모자라는지를 return 하도록 solution 함수를 완성하세요. 단, 금액이 부족하지 않으면 0을 return 하세요.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC704\\uD074\\uB9AC \\uCC4C\\uB9B0\\uC9C0 1\\uC8FC\\uCC28 \\uBB38\\uC81C\")), mdx(\"h2\", null, \"\\uBB38\\uC81C \\uC124\\uBA85\"), mdx(\"p\", null, \"\\uC0C8\\uB85C \\uC0DD\\uAE34 \\uB180\\uC774\\uAE30\\uAD6C\\uB294 \\uC778\\uAE30\\uAC00 \\uB9E4\\uC6B0 \\uB9CE\\uC544 \\uC904\\uC774 \\uB04A\\uC774\\uC9C8 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uC774 \\uB180\\uC774\\uAE30\\uAD6C\\uC758 \\uC6D0\\uB798 \\uC774\\uC6A9\\uB8CC\\uB294 price\\uC6D0 \\uC778\\uB370, \\uB180\\uC774\\uAE30\\uAD6C\\uB97C N \\uBC88 \\uC9F8 \\uC774\\uC6A9\\uD55C\\uB2E4\\uBA74 \\uC6D0\\uB798 \\uC774\\uC6A9\\uB8CC\\uC758 N\\uBC30\\uB97C \\uBC1B\\uAE30\\uB85C \\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4. \\uC989, \\uCC98\\uC74C \\uC774\\uC6A9\\uB8CC\\uAC00 100\\uC774\\uC5C8\\uB2E4\\uBA74 2\\uBC88\\uC9F8\\uC5D0\\uB294 200, 3\\uBC88\\uC9F8\\uC5D0\\uB294 300\\uC73C\\uB85C \\uC694\\uAE08\\uC774 \\uC778\\uC0C1\\uB429\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uB180\\uC774\\uAE30\\uAD6C\\uB97C count\\uBC88 \\uD0C0\\uAC8C \\uB418\\uBA74 \\uD604\\uC7AC \\uC790\\uC2E0\\uC774 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294 \\uAE08\\uC561\\uC5D0\\uC11C \\uC5BC\\uB9C8\\uAC00 \\uBAA8\\uC790\\uB77C\\uB294\\uC9C0\\uB97C return \\uD558\\uB3C4\\uB85D solution \\uD568\\uC218\\uB97C \\uC644\\uC131\\uD558\\uC138\\uC694.\\n\\uB2E8, \\uAE08\\uC561\\uC774 \\uBD80\\uC871\\uD558\\uC9C0 \\uC54A\\uC73C\\uBA74 0\\uC744 return \\uD558\\uC138\\uC694.\"), mdx(\"h2\", null, \"\\uC81C\\uD55C\\uC0AC\\uD56D\"), mdx(\"p\", null, \"\\uB180\\uC774\\uAE30\\uAD6C\\uC758 \\uC774\\uC6A9\\uB8CC price : 1 \\u2264 price \\u2264 2,500, price\\uB294 \\uC790\\uC5F0\\uC218\\n\\uCC98\\uC74C \\uAC00\\uC9C0\\uACE0 \\uC788\\uB358 \\uAE08\\uC561 money : 1 \\u2264 money \\u2264 1,000,000,000, money\\uB294 \\uC790\\uC5F0\\uC218\\n\\uB180\\uC774\\uAE30\\uAD6C\\uC758 \\uC774\\uC6A9 \\uD69F\\uC218 count : 1 \\u2264 count \\u2264 2,500, count\\uB294 \\uC790\\uC5F0\\uC218\"), mdx(\"h2\", null, \"\\uC785\\uCD9C\\uB825 \\uC608\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"price\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"money\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"count\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"result\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"20\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"10\")))), mdx(\"h2\", null, \"\\uD480\\uC774\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"function solution(price, money, count) {\\n    let need = 0;\\n\\n    for (let i = 1; i <= count; i++)\\n        need += price * i;\\n\\n    return need - money > 0 ? need - money : 0;\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC880 \\uB354 \\uC9E7\\uAC8C \\uD560 \\uC218 \\uC788\\uC73C\\uB098 \\uAC00\\uB3C5\\uC131\\uC744 \\uACE0\\uB824\\uD558\\uBA74 \\uC774\\uAC8C \\uB354 \\uC88B\\uC740 \\uAC83 \\uAC19\\uB354\\uB77C.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"description":"위클리 챌린지, [프로그래머스] 부족한 금액 계산하기","title":"[프로그래머스] 부족한 금액 계산하기","date":"2021년 08월 17일","tag":["코딩테스트"]},"internal":{"content":"---\r\ndescription: \"위클리 챌린지, [프로그래머스] 부족한 금액 계산하기\"\r\ntitle: \"[프로그래머스] 부족한 금액 계산하기\"\r\ntag: [\"코딩테스트\"]\r\ndate: \"2021-08-17\"\r\nsummary: \"놀이기구를 count번 타게 되면 현재 자신이 가지고 있는 금액에서 얼마가 모자라는지를 return 하도록 solution 함수를 완성하세요.\r\n단, 금액이 부족하지 않으면 0을 return 하세요.\"\r\n---\r\n\r\n> 위클리 챌린지 1주차 문제\r\n\r\n## 문제 설명\r\n\r\n새로 생긴 놀이기구는 인기가 매우 많아 줄이 끊이질 않습니다. 이 놀이기구의 원래 이용료는 price원 인데, 놀이기구를 N 번 째 이용한다면 원래 이용료의 N배를 받기로 하였습니다. 즉, 처음 이용료가 100이었다면 2번째에는 200, 3번째에는 300으로 요금이 인상됩니다.\r\n\r\n놀이기구를 count번 타게 되면 현재 자신이 가지고 있는 금액에서 얼마가 모자라는지를 return 하도록 solution 함수를 완성하세요.\r\n단, 금액이 부족하지 않으면 0을 return 하세요.\r\n\r\n## 제한사항\r\n\r\n놀이기구의 이용료 price : 1 ≤ price ≤ 2,500, price는 자연수\r\n처음 가지고 있던 금액 money : 1 ≤ money ≤ 1,000,000,000, money는 자연수\r\n놀이기구의 이용 횟수 count : 1 ≤ count ≤ 2,500, count는 자연수\r\n\r\n## 입출력 예\r\n\r\n| price | money | count | result |\r\n| ----- | ----- | ----- | ------ |\r\n| 3     | 20    | 4     | 10     |\r\n\r\n## 풀이\r\n\r\n```\r\nfunction solution(price, money, count) {\r\n    let need = 0;\r\n\r\n    for (let i = 1; i <= count; i++)\r\n        need += price * i;\r\n\r\n    return need - money > 0 ? need - money : 0;\r\n}\r\n```\r\n\r\n- 좀 더 짧게 할 수 있으나 가독성을 고려하면 이게 더 좋은 것 같더라.\r\n"}}},"pageContext":{"id":"caab62e2-cc1d-5ea7-b59e-993f4d7a67cc","slug":"coding-test2","__params":{"slug":"coding-test2"}}},
    "staticQueryHashes": ["2841612589","3433077949","3494247862"]}