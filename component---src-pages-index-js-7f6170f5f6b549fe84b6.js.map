{"version":3,"file":"component---src-pages-index-js-7f6170f5f6b549fe84b6.js","mappings":"0NAqCA,EAhCqB,SAAC,GAAwC,IAAtCA,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC3CC,EAAQC,EAAAA,WAAiBC,EAAAA,IACzBC,EAAWF,EAAAA,SACXG,EAAUH,EAAAA,SACVI,EAAUJ,EAAAA,SAQhB,OANAA,EAAAA,WAAgB,WACdE,EAASG,QAAQC,MAAMC,MAAQR,EAAMS,OAAOC,UAC5CN,EAAQE,QAAQC,MAAMC,MAAQR,EAAMS,OAAOE,SAC3CN,EAAQC,QAAQC,MAAMC,MAAQR,EAAMS,OAAOG,WAC1C,CAACZ,EAAMa,OAGR,sBAAIC,UCjBkB,gDDkBpB,gBAAC,KAAD,CAAMC,GAAIhB,EAAKe,UCjBK,gDDkBlB,sBAAIA,UCjBmB,qDDiBkBE,IAAKb,GAC3CR,GAEH,uBAAKmB,UCnBiB,qDDoBpB,wBAAME,IAAKZ,GACRR,EAAIqB,KAAI,SAACC,GAAD,OACP,qBAAGC,IAAQxB,EAAL,QAAkBuB,GAAxB,IAAqCA,OAGzC,qBAAGF,IAAKX,GAAUR,IAEpB,qBAAGiB,UC1BsB,wDD0BkBhB,MEkCnD,EAzDiB,SAAC,GAAwB,IAAtBsB,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACtBC,EAAU,WACVC,EAAaF,EAAKG,OAAOC,MAC/B,EAAgCxB,EAAAA,SAAesB,GAAxCG,EAAP,KAAiBC,EAAjB,KACA,EAAsC1B,EAAAA,SAAeqB,GAA9CM,EAAP,KAAoBC,EAApB,KAcA,OAZA5B,EAAAA,WAAgB,WACd,IAAM6B,EAAQV,EAASU,MACjBC,EAAUD,EAAQA,EAAMC,QAAUT,EAExCO,GAAe,kBAAME,KACrBJ,GAAY,kBACVI,IAAYT,EACRC,EACAA,EAAWS,QAAO,SAACC,GAAD,OAAUA,EAAKC,YAAYtC,IAAIuC,SAASJ,WAE/D,CAACX,EAASU,MAAOP,IAGlB,gBAAC,IAAD,CAAQa,SAAUA,EAAAA,GAAUR,YAAaA,GACvC,gBAAC,IAAD,MACA,qBAAGd,UC3BsB,4CD2BzB,iBACiBc,IAAgBN,EAAU,GAA1B,KAAoCM,GAErD,sBAAId,UC/BiB,wCDgClBY,EAAST,KAAI,SAACoB,GAAD,OACZ,gBAAC,EAAD,CACElB,IAAKkB,EAAKC,GACV3C,MAAO0C,EAAKH,YAAYvC,MACxBC,IAAKyC,EAAKH,YAAYtC,IACtBC,KAAMwC,EAAKH,YAAYrC,KACvBC,QAASuC,EAAKH,YAAYpC,QAC1BC,IAAG,SAAWsC,EAAKE","sources":["webpack://kom-s-blog/./src/components/post-list-item.js","webpack://kom-s-blog/./src/components/post-list-item.module.css","webpack://kom-s-blog/./src/pages/index.js","webpack://kom-s-blog/./src/pages/index.module.css"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport * as React from \"react\";\r\nimport * as Styles from \"./post-list-item.module.css\";\r\nimport { themeStateContext } from \"./themeProvider\";\r\n\r\nconst PostListItem = ({ title, tag, date, summary, url }) => {\r\n  const theme = React.useContext(themeStateContext);\r\n  const titleRef = React.useRef();\r\n  const tagsRef = React.useRef();\r\n  const dateRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    titleRef.current.style.color = theme.colors.postTitle;\r\n    tagsRef.current.style.color = theme.colors.postTags;\r\n    dateRef.current.style.color = theme.colors.postDate;\r\n  }, [theme.mode]);\r\n\r\n  return (\r\n    <li className={Styles.postListItem}>\r\n      <Link to={url} className={Styles.postListLink}>\r\n        <h2 className={Styles.postListItemTitle} ref={titleRef}>\r\n          {title}\r\n        </h2>\r\n        <div className={Styles.postListItemInfo}>\r\n          <span ref={tagsRef}>\r\n            {tag.map((name) => (\r\n              <p key={`${title}-tag:${name}`}>{`#${name}`}</p>\r\n            ))}\r\n          </span>\r\n          <p ref={dateRef}>{date}</p>\r\n        </div>\r\n        <p className={Styles.postListItemSummary}>{summary}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostListItem;\r\n","// extracted by mini-css-extract-plugin\nexport var postListItem = \"post-list-item-module--post-list-item--6OipT\";\nexport var postListLink = \"post-list-item-module--post-list-link--+Glxn\";\nexport var postListItemTitle = \"post-list-item-module--post-list-item-title--3q+4h\";\nexport var postListItemInfo = \"post-list-item-module--post-list-item-info--NpAk0\";\nexport var postListItemSummary = \"post-list-item-module--post-list-item-summary--8FIk0\";","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { indexMainPosition, indexMainList } from \"./index.module.css\";\r\nimport Seo from \"../components/wrappers/seo\";\r\nimport Layout from \"../components/layout\";\r\nimport PostListItem from \"../components/post-list-item\";\r\n\r\nconst BlogPage = ({ location, data }) => {\r\n  const VIEWALL = \"view-all\";\r\n  const originData = data.allMdx.nodes;\r\n  const [postList, setPostList] = React.useState(originData);\r\n  const [selectedTag, setSelectedTag] = React.useState(VIEWALL);\r\n\r\n  React.useEffect(() => {\r\n    const state = location.state;\r\n    const tagName = state ? state.tagName : VIEWALL;\r\n\r\n    setSelectedTag(() => tagName);\r\n    setPostList(() =>\r\n      tagName === VIEWALL\r\n        ? originData\r\n        : originData.filter((post) => post.frontmatter.tag.includes(tagName))\r\n    );\r\n  }, [location.state, originData]);\r\n\r\n  return (\r\n    <Layout isMobile={isMobile} selectedTag={selectedTag}>\r\n      <Seo />\r\n      <p className={indexMainPosition}>\r\n        Documentation {selectedTag === VIEWALL ? \"\" : `> ${selectedTag}`}\r\n      </p>\r\n      <ul className={indexMainList}>\r\n        {postList.map((node) => (\r\n          <PostListItem\r\n            key={node.id}\r\n            title={node.frontmatter.title}\r\n            tag={node.frontmatter.tag}\r\n            date={node.frontmatter.date}\r\n            summary={node.frontmatter.summary}\r\n            url={`/post/${node.slug}`}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query MyQuery {\r\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"YYYY년 MM월 DD일\")\r\n          tag\r\n          title\r\n          summary\r\n        }\r\n        id\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogPage;\r\n","// extracted by mini-css-extract-plugin\nexport var indexMainList = \"index-module--index-main-list--18WNq\";\nexport var indexMainPosition = \"index-module--index-main-position--IB6Ii\";"],"names":["title","tag","date","summary","url","theme","React","themeStateContext","titleRef","tagsRef","dateRef","current","style","color","colors","postTitle","postTags","postDate","mode","className","to","ref","map","name","key","location","data","VIEWALL","originData","allMdx","nodes","postList","setPostList","selectedTag","setSelectedTag","state","tagName","filter","post","frontmatter","includes","isMobile","node","id","slug"],"sourceRoot":""}